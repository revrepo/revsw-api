{
  "name": "should-http",
  "version": "0.0.4",
  "description": "Http requests, response assertions for should.js",
  "main": "index.js",
  "scripts": {
    "test": "mocha --reporter mocha-better-spec-reporter test/**.test.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/shouldjs/http.git"
  },
  "keywords": [
    "should",
    "should.js",
    "http"
  ],
  "author": {
    "name": "TJ Holowaychuk",
    "email": "tj@vision-media.ca"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/shouldjs/http/issues"
  },
  "homepage": "https://github.com/shouldjs/http",
  "devDependencies": {
    "mocha-better-spec-reporter": "latest",
    "mocha": "latest",
    "should": "latest"
  },
  "peerDependencies": {
    "should": ">= 4.x"
  },
  "readme": "# should.js http assertions\n\n[![Build Status](https://travis-ci.org/shouldjs/http.svg?branch=master)](https://travis-ci.org/shouldjs/http)\n\nThis module can be usefull for asserting on node standard `http` modele request and response.\n\n## Install\n\n```\nnpm install should-http --save-dev\n```\n\n```\nrequire('should-http');\n```\n\nThat row patch your should instance adding assertions. With mocha you can use it via `-r` switch.\n\n## .status(code)\n\nAsserts that `.statusCode` is `code`:\n```javascript\nres.should.have.status(200);\n```\n\n## .header(field[, value])\n\nAsserts that a `.headers` object with `field` and optional `value` are present:\n```javascript\nres.should.have.header('content-length');\nres.should.have.header('Content-Length', '123');\n```\n\n## .json\n\nAssert that Content-Type is \"application/json; charset=utf-8\"\n\n```javascript\nres.should.be.json\n```\n\n## .html\n\nAssert that Content-Type is \"text/html; charset=utf-8\"\n```javascript\nres.should.be.html\n```\n",
  "readmeFilename": "Readme.md",
  "_id": "should-http@0.0.4",
  "_from": "should-http@"
}
